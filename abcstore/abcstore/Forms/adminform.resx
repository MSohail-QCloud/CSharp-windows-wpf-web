<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        GB//gAAn/4BAp//AY+f/wBf///4f////P/8=
</value>
  </data>
</root>